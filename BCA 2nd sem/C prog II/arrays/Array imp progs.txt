Q1. WAP in C to search an Element in an array.

#include <stdio.h>
 
int main()
{
  int array[]= {20,40,70,90,10};
  int search,i;

  printf("Enter a number to search\n");
  scanf("%d", &search);
 
  for (i = 0; i < 5; i++)
  {
    if (array[i] == search)    
    {
      printf("Number is present at location %d.\n", i);
      break;
    }
  }
  if (i == 5)
    printf("Number is not present in the array.\n");
 
  return 0;
}

Q2. WAP in C to remove duplicate elements in an array.

#include<stdio.h>

void main()
{
    int a[]={10,20,30,10,30,40,20,40,10,30};
    int i, j, k;
    int n=10;
    
    printf("\nOriginal array is: ");
    for(i = 0; i < n; i++)
    {
        printf(" %d", a[i]);
    }

    printf("\nNew array after removing duplicate elements: ");
    for(i = 0; i < n; i++)
    {
        for(j = i+1; j < 10; )
        {
            if(a[j] == a[i])
            {
                for(k = j; k < n-1; k++)
                {
                    a[k] = a[k+1];
                }
                n--;
            }
            else
            {
                j++;
            }
        }
    }

    for(i = 0; i < n; i++)
    {
        printf("%d ", a[i]);
    }
    
}

Q3. WAP in C to multiply two matrices.

#include <stdio.h>
 
int main()
{
  int m, n, p, q, c, d, k, sum = 0;
  int first[10][10], second[10][10], multiply[10][10];
 
  printf("Enter the number of rows and columns of first matrix\n");
  scanf("%d%d", &m, &n);
  printf("Enter the elements of first matrix\n");
 
  for (  c = 0 ; c < m ; c++ )
    for ( d = 0 ; d < n ; d++ )
      scanf("%d", &first[c][d]);
 
  printf("Enter the number of rows and columns of second matrix\n");
  scanf("%d%d", &p, &q);
 
  if ( n != p )
    printf("Matrices with entered orders can't be multiplied with each other.\n");
  else
  {
    printf("Enter the elements of second matrix\n");
 
    for ( c = 0 ; c < p ; c++ )
      for ( d = 0 ; d < q ; d++ )
        scanf("%d", &second[c][d]);
 
    for ( c = 0 ; c < m ; c++ )
    {
      for ( d = 0 ; d < q ; d++ )
      {
        for ( k = 0 ; k < p ; k++ )
        {
          sum = sum + first[c][k]*second[k][d];
        }
 
        multiply[c][d] = sum;
        sum = 0;
      }
    }
 
    printf("Product of entered matrices:-\n");
 
    for ( c = 0 ; c < m ; c++ )
    {
      for ( d = 0 ; d < q ; d++ )
        printf("%d\t", multiply[c][d]);
 
      printf("\n");
    }
  }
 
  return 0;
}

Q.4 WAP in C program to insert an element in an array.

#include <stdio.h>
 
int main()
{
   int array[20], position, i, n, value;
 
   printf("Enter size of an array\n");
   scanf("%d", &n);
 
   printf("Enter %d elements\n", n);
 
   for (i = 0; i < n; i++)
      scanf("%d", &array[i]);
 
   printf("Enter the location where you wish to insert an element\n");
   scanf("%d", &position);
 
   printf("Enter the value to insert\n");
   scanf("%d", &value);
 
   for (i = n - 1; i >= position - 1; i--)
      array[i+1] = array[i];
 
   array[position-1] = value;
 
   printf("Resultant array is\n");
 
   for (i = 0; i <= n; i++)
      printf("%d\n", array[i]);
 
   return 0;
}

Q.5 WAP in C program to delete an element in an array.

#include <stdio.h>
 
int main()
{
   int array[100], position, i, n;
 
   printf("Enter number of elements in array\n");
   scanf("%d", &n);
 
   printf("Enter %d elements\n", n);
 
   for (i = 0; i < n; i++)
      scanf("%d", &array[i]);
 
   printf("Enter the location where you wish to delete element\n");
   scanf("%d", &position);
 
   if (position >= n+1)
      printf("Deletion not possible.\n");
   else
   {
      for (i = position - 1; i < n - 1; i++)
         array[i] = array[i+1];
 
      printf("Resultant array:\n");
 
      for (i = 0; i < n - 1; i++)
         printf("%d\n", array[i]);
   }
 
   return 0;
}

